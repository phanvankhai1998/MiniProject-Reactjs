[{"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\index.js":"1","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\App.js":"2","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\CartItem.js":"4","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\Cart.js":"5","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\Navbar.js":"6","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\serviceworker.js":"7"},{"size":935,"mtime":1616059241597,"results":"8","hashOfConfig":"9"},{"size":6765,"mtime":1616084536804,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2939,"mtime":1616027472599,"results":"12","hashOfConfig":"9"},{"size":740,"mtime":1615995291151,"results":"13","hashOfConfig":"9"},{"size":1172,"mtime":1615996139746,"results":"14","hashOfConfig":"9"},{"size":5852,"mtime":1616058414674,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"f414iu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\index.js",[],["33","34"],"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\App.js",["35","36"],"import React, { Component } from 'react';\nimport Cart from './components/Cart';\nimport Navbar from './components/Navbar';\nimport firebase from 'firebase';\n\nclass App extends Component {\n    constructor() {\n        super();\n        console.log(\"This is constructor\");\n        this.state = {\n            products: [\n                // {\n                //     id: 1,\n                //     price: 1000,\n                //     title: 'Oppo Phone',\n                //     qty: 1,\n                //     img: 'https://www.flaticon.com/svg/vstatic/svg/1721/1721963.svg?token=exp=1616028004~hmac=8400b04785757b2b75bc58749b259d29'\n                // },\n                // {\n                //     id: 2,\n                //     price: 2000,\n                //     title: 'Vinfast Phone',\n                //     qty: 2,\n                //     img: 'https://www.flaticon.com/svg/vstatic/svg/1721/1721912.svg?token=exp=1616028005~hmac=dc3acbb39cd8550cf4af87b4dc0fc9fc'\n                // },\n                // {\n                //     id: 3,\n                //     price: 3000,\n                //     title: 'Bi Phone',\n                //     qty: 3,\n                //     img: 'https://www.flaticon.com/svg/vstatic/svg/1721/1721908.svg?token=exp=1616028009~hmac=e0825712e14e0e956810cedf2fae71cf'\n                // }\n            ],\n            loading: true\n        }\n\n        this.db = firebase.firestore();\n    }\n\n    componentDidMount() {\n        // firebase\n        //     .firestore()\n        //     .collection('products')\n        //     .get()\n        //     .then((snapshot) => {\n        //         console.log(snapshot);\n\n        //         snapshot.docs.map((doc) => {\n        //             console.log(doc.data());\n        //         });\n\n        //         const products = snapshot.docs.map((doc) => {\n        //             const data = doc.data();\n\n        //             data['id'] = doc.id\n        //             return data;\n        //         });\n\n        //         this.setState({\n        //             products,\n        //             loading: false\n        //         });\n        //     })\n\n        // firebase\n        //     .firestore()\n        this.db\n            .collection('products')\n            // .where('price', '==', 1000)\n            // .where('price', '==', 3000)\n            // .orderBy('price', 'asc')\n            .orderBy('price', 'desc')\n            .onSnapshot((snapshot) => {\n                console.log(snapshot);\n\n                snapshot.docs.map((doc) => {\n                    console.log(doc.data());\n                });\n\n                const products = snapshot.docs.map((doc) => {\n                    const data = doc.data();\n\n                    data['id'] = doc.id\n                    return data;\n                });\n\n                this.setState({\n                    products,\n                    loading: false\n                });\n            })\n    }\n\n    handleInCreaseQuantity = (product) => {\n        console.log('Heyy please inc the qty of', product);\n        const { products } = this.state;\n        const index = products.indexOf(product);\n\n        // products[index].qty += 1;\n        // this.setState({\n        //     products\n        // });\n        const docRef = this.db.collection('products').doc(products[index].id);\n        docRef\n            .update({\n                qty: products[index].qty + 1\n            })\n            .then(() => {\n                console.log('Updated successfully')\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n            })\n    }\n\n    handleDecreasQuantity = (product) => {\n        const { products } = this.state;\n        const index = products.indexOf(product);\n\n        if (products[index].qty === 0) {\n            return;\n        }\n\n        // products[index].qty -= 1;\n        // this.setState({\n        //     products\n        // });\n\n        const docRef = this.db.collection('products').doc(products[index].id);\n        docRef\n            .update({\n                qty: products[index].qty - 1\n            })\n            .then(() => {\n                console.log('Updated successfully')\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n            })\n    }\n\n    handleDeleteProduct = (id) => {\n        const { products } = this.state;\n        // const items = products.filter((item) => item.id !== id);    //[{}]\n        // this.setState({\n        //     products: items\n        // });\n\n        const docRef = this.db.collection('products').doc(id);\n        docRef\n            .delete()\n            .then(() => {\n                console.log('Delete successfully!!!');\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n            })\n    }\n\n    getCartCount = () => {\n        const { products } = this.state;\n\n        let count = 0;\n\n        products.forEach((product) => {\n            count += product.qty;\n        })\n\n        return count;\n    }\n\n    getCartTotal = () => {\n        const { products } = this.state;\n\n        let cartTotal = 0;\n\n        products.map((product) => {\n            if (product.qty > 0) {\n                cartTotal = cartTotal + product.qty * product.price;\n            }\n            return '';\n        });\n        return cartTotal;\n    }\n\n    addProduct = () => {\n        this.db\n            .collection('products')\n            .add({\n                img: '',\n                price: 900,\n                qty: 3,\n                title: 'Washing Machine'\n            })\n            .then((docRef) => {\n                console.log('Product has been added:', docRef);\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n            })\n    }\n\n    render() {\n        console.log(\"Rendering...\")\n        console.log(\"This is state:\", this.state);\n        console.log(\"This is props:\", this.props);\n        const { products, loading } = this.state;\n        return (\n            <div className=\"App\" >\n                <h1>Cart</h1>\n                <Navbar count={this.getCartCount()} />\n                {/* <button\n                    onClick={this.addProduct}\n                    style={{ padding: 20, fontSize: 20 }}\n                >Add a product\n                </button> */}\n                <Cart\n                    products={products}\n                    onIncreasQuantity={this.handleInCreaseQuantity}\n                    onDecreasQuantity={this.handleDecreasQuantity}\n                    onDeleteQuantity={this.handleDeleteProduct}\n                />\n                { loading && <h1>Loading Products...</h1>}\n                <div style={{ padding: 10, fontSize: 20 }}>Total:{this.getCartTotal()}</div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\reportWebVitals.js",[],["37","38"],"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\CartItem.js",[],"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\Cart.js",[],"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\components\\Navbar.js",[],"C:\\Users\\phan_\\Downloads\\Coding Ninja - ReactJs\\my-app\\src\\serviceworker.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":76,"column":41,"nodeType":"45","messageId":"46","endLine":76,"endColumn":43},{"ruleId":"47","severity":1,"message":"48","line":143,"column":17,"nodeType":"49","messageId":"50","endLine":143,"endColumn":25},{"ruleId":"39","replacedBy":"51"},{"ruleId":"41","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar",["53"],["54"],"no-global-assign","no-unsafe-negation"]